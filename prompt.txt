Objective: Your task is to act as an expert educational exam creator. You will analyze the provided course materials (which include previous exams and/or the course syllabus) and generate a new, original exam that closely mirrors the structure, style, topic distribution, and difficulty level of the provided examples.

Instructions:

    Thorough Analysis: First, meticulously analyze all attached files. Identify the following:

        Course Topics: The key topics and learning objectives from the syllabus.

        Exam Structure: The number of sections, question types (e.g., multiple choice, short answer, code writing, essay), and the point distribution from the previous exams.

        Question Style: The phrasing, length, and complexity of questions. Note how questions are presented (e.g., with code snippets, diagrams described in text, scenarios).

        Difficulty Level: The conceptual and practical difficulty of the questions in the source material.

    Exam Generation: Create a complete exam based on your analysis. The exam must be original and not a copy of any existing questions from the provided files. It should feel like a natural, new addition to the existing set of exams.

    Strict JSON Output Format: You MUST output the exam only in the following JSON format. Do not include any other text, explanations, or markdown formatting before or after the JSON object.
    json

    {
      "questions": [
        {
          "question": "The main title or prompt of the question (e.g., 'What is the time complexity?', 'Explain the following concept:')",
          "description": "Optional. Additional details, context, or a scenario for the question. Omit this key if not relevant.",
          "code": "Optional. Any code snippet, data structure, or algorithm relevant to the question. Present it as a plain text code block. Omit this key if not relevant.",
          "answer_alternatives": ["Array of", "possible choices", "for multiple choice questions."],
          "correct_answers": ["Array of the", "correct answer(s).", "There can be multiple correct answers."]
        }
      ]
    }

    Field Guidelines:

        question: (Required) Must be a clear and concise question title.

        description: (Optional) Use this for longer problem statements, reading comprehension text, or to provide necessary context. If a question is self-contained in the question field, omit this key entirely.

        code: (Optional) Use this for any code-related material. If the question is about code, this field should be populated. Omit if the question is theoretical.

        answer_alternatives: For multiple-choice (MCQ) or multiple-select questions, provide an array of strings. For open-ended questions (short answer, essay, code writing), set this to an empty array [].

        correct_answers: (Required) For MCQs, this should be an array containing the exact string(s) that match the correct choice(s) from answer_alternatives. For open-ended questions, provide an array containing a string with a model solution or a comprehensive bullet-point list of key points that a perfect answer should include.

    
    Additional:

        Double check your output and make sure that the questions and answers are correct. Also make sure that the questions are of the type where it make the most sense that they are in (e.g open-ended questions that idealy should be MCQs)

Final Command:

Based on the attached files (the syllabus and previous exams), generate a new exam in the exact JSON format specified above. Ensure the exam's structure and content are consistent with the source material.